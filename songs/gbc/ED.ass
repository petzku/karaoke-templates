[Script Info]
; Script generated by Aegisub 9643-cibuilds-c61f149a3
; http://www.aegisub.org/
Title: English (US)
Original Script: 
Original Translation: 
Original Editing: 
Original Timing: 
Synch Point: 
Script Updated By: 
Update Details: 
ScriptType: v4.00+
PlayResX: 1920
PlayResY: 1080
Timer: 0.0000
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.709

[Aegisub Project Garbage]

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: EDStyle,Architects Daughter-petzku,74,&H0001015D,&H000000FF,&H00C3EAFF,&H00212198,0,0,0,0,100,100,0,0,1,4,0,2,90,90,50,0
Style: ArekiSigns,Fira Sans Medium,50,&H0000FFA9,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,0,0,5,60,60,50,0

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,,{=0}Template
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,code once,ill = require 'ILL.ILL'
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,code once,ease = require 'petzku.easings'
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,code once,tag = require 'petzku.loadtags'; tag.config(tenv, {sep=" "})
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,code once,math.randomseed(422)
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,,
Comment: 0,0:22:33.83,0:22:46.72,EDStyle,,0,0,0,,demo
Comment: 0,0:22:21.03,0:23:46.11,EDStyle,,0,0,0,,full
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,,
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,code once,function is_lastsyl() return not syl.next or (not syl.next.next and syl.next.is_blank) end
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,code once,function is_firstsyl() return not syl.prev end
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,code once,function is_firstword() return not word.prev end
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,,
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,code once,BASE_LAYER = 5
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,code once,local last = util.rand.sign(); local must = false; function rnd_flip() if must or rnd() < 0.7 then last = -last; must = false; else must = true; end return last; end
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,,
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,code line actor left,local w = orgline.width/2 + 10; orgline.center = orgline.center - w; orgline.left = orgline.left - w; orgline.right = orgline.right - w
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,code line actor right,local w = -(orgline.width/2 + 10); orgline.center = orgline.center - w; orgline.left = orgline.left - w; orgline.right = orgline.right - w
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,code once,function retime_clamp_end(shift_start) if orgline.next then local dt = 500 - (orgline.width + orgline.next.width)/12 - (orgline.next.start_time - orgline.end_time); if dt > 0 then retime('delta', shift_start and -dt or 0, -dt) end end end
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,,
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,code once,function get_prev_blank_syl() local s = word.chars[1].syl; while not s.is_blank or s.is_space do s = s.prev end; return s; end
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,mixin line t_actor main t_actor bgbox actor start,!set('pbs', get_prev_blank_syl())!!retime('line', -200 + pbs.start_time + ((word.left-pbs.left) / 6), 300 - (line.width - word.left) / 6)!
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,,
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,mixin line t_actor main t_actor bgbox actor main,!retime('line', -200 + (word.left / 6), 300 - (line.width - word.left) / 6)!
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,mixin line t_actor strmain,!retime('line', -150, 300)!{\fad(150,100)}
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,mixin line t_actor main t_actor strmain t_actor bgbox noactor noclamp,!retime_clamp_end()!
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,mixin line t_actor main t_actor string t_actor bgbox,!set('dt', orgline.start_time - line.start_time)!
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,,
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,code once,function rand_coord(x, y) local xx = x + rnd(hw / 10) * ln.math.sgn(x); local yy = y + rnd(-5, 10) * ln.math.sgn(y); return string.format("%.2f %.2f", xx, yy) end
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,code once,function get_boxfill() local t = tag.table(); if t.swap and tonumber(t.swap) <= word.wi then return t.c2 or gc(3); else return t.c1 or gc(3); end end
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,,
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,code word,hw = word.width / 2 + 10; hh = math.min(orgline.height / 2, math.max(hw, orgline.height/3))
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,code word if is_firstword,boxdraw = string.format("m %s l %s %s %s", rand_coord(-hw, -hh), rand_coord(hw, -hh), rand_coord(hw, hh), rand_coord(-hw, hh))
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,code word unless is_firstword,boxdraw = string.format("m %s l %s %s %s", rand_coord(-hw+5, -hh), rand_coord(hw, -hh), rand_coord(hw, hh), rand_coord(-hw+5, hh))
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,bgbox bgbord,0,0,0,template word notext,
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,bgbox bgfill,0,0,0,template word notext,
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,mixin line t_actor bgbox,{!ln.tag.pos(7, 5, nil, nil)!}
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,mixin line t_actor bgbord,{\bord4\shad0\blur0.7\c&H020016&\3c&H020016&}
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,mixin line t_actor bgfill,{\bord0\shad0\blur0.7}
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,mixin line t_actor bgfill noactor dull,{\c!gc(3)!}
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,mixin line t_actor bgfill actor dull,{\c&HE0E0E6&}
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,mixin line t_actor bgfill actor last,{\t(!line.duration - 1000!,0,\c&HE0E0E6&)}
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,,
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,code line,for _, char in _G.ipairs(orgline.chars) do char.dlayer = rnd_flip(); end
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,main start,0,0,0,template word actor start loop layer 2,{!ln.tag.pos(5, 5)!}!relayer($loop_layer)!
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,main has_string,0,0,0,template word actor main loop layer 2 loop wchar -1,{!ln.tag.pos(5, 5)!}!relayer($loop_layer)!!maxloop('wchar', #word.chars)!
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,mixin char t_actor has_string noblank,!set('wci', char.ci - word.chars[1].ci + 1)!{\alpha!wci == loopctx.state.wchar and "" or "&HFF&"!}
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,mixin line t_actor main layer 1,{\bord0\blur5}
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,mixin line t_actor main layer 1 noactor dull,{\c!gc(3)!\3c!gc(3)!}
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,mixin line t_actor main layer 1 actor dull,{\c&HE0E0E6&\3c&HE0E0E6&}
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,mixin line t_actor main layer 1 actor last,{\t(!line.duration - 1000!,0,\c&HE0E0E6&\3c&HE0E0E6&)}
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,mixin line t_actor main layer 2,{\bord0\shad0\blur0.7}
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,mixin line t_actor main layer 2 actor start,{\c&H1C1C41&}
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,mixin line t_actor main layer 1,!relayer(BASE_LAYER - 2)!
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,mixin line t_actor has_string layer 2,!relayer(BASE_LAYER + word.chars[$loop_wchar].dlayer)!
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,mixin line t_actor start layer 2,!relayer(BASE_LAYER)!
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,,
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,mixin line t_actor bgbox t_actor main,{!ease.o.back({{'fscx', 0, 100}, {'fscy', 0, 100}}, 0, 400)!}
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,mixin line t_actor bgbox t_actor main,{!ease.i.back({{'fscx', 100, 0}, {'fscy', 100, 0}}, line.duration - 400, line.duration)!}
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,mixin line t_actor bgbord,{!ease.o.back({'bord', 1, 4}, 0, 400)!}
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,mixin line t_actor bgbord,{!ease.i.back({'bord', 4, 1}, line.duration - 400, line.duration)!}
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,,
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,,
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,code once,function get_midi(s) return s and s.syl_fx:sub(1,4) == "midi" and tonumber(s.syl_fx:sub(5)) or nil end
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,code once,function get_direction(syl) local this = get_midi(syl); local prev = syl and syl.prev and get_midi(syl.prev); if this and prev then return ln.math.sgn(prev - this) else return util.rand.sign()/3 end end
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,,
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,code line,dist_left = 10 dist_right = 10
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,code line,clip_left = orgline.left - dist_left - 2; clip_right = orgline.right + dist_right + 2
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,code line noactor right,left_y = rnd(-dist_left/2, dist_left/2); left_dir = rnd(-10,10)
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,code line actor right,left_y = right_y; left_dir = -right_dir
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,code line,right_y = rnd(-dist_left, dist_left); right_dir = rnd(-10,10)
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,-- start,0,0,0,code line,shape_m = string.format("%d %d", -dist_left, left_y); shape_t = {string.format("0 %d", left_y + left_dir)}
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,-- per-syl,0,0,0,code line,for _, syl in _G.ipairs(orgline.syls) do if not syl.is_blank then local force = rnd(0.8, 1.2); local dx = math.max(syl.width/2, orgline.height/5) * force; local dy = (0.6 * get_direction(syl) + rnd(-0.15,0.15)) * math.min(syl.width, orgline.height); table.insert(shape_t, string.format("%d %d",  syl.center - dx, -dy)); table.insert(shape_t, string.format("%d %d", syl.center, 0)); table.insert(shape_t, string.format("%d %d", syl.center + dx, dy)); end end
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,-- end,0,0,0,code line,table.insert(shape_t, string.format("%d %d", orgline.width, right_y + right_dir)); table.insert(shape_t, string.format("%d %d", orgline.width + dist_right, right_y))
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,-- reverse,0,0,0,code line,rev = {}; for i=#shape_t-1, 1, -1 do local x, y = shape_t[i]:match("(.*) (.*)"); table.insert(rev, string.format("%d %.1f", x, y+0.2)); end; table.insert(rev, shape_m)
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,-- build,0,0,0,code line,string_shape ="m " .. shape_m .. " b " .. table.concat(shape_t, " ") .. " b " .. table.concat(rev, " "); exp = ill.Path(string_shape):offset(2)
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,string strmain,0,0,0,template line notext actor main,!relayer(BASE_LAYER)!{!ln.tag.pos(7,4,nil,0)!}
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,mixin line t_actor string,{\shad0\bord1.75\3c&H0A05D4&\blur0.5\fscx100\fscy100}
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,,
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,mixin syl t_actor strmain if is_firstsyl,{\clip(!clip_left!,0,!clip_left!,1080)}
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,mixin syl t_actor strmain unless is_lastsyl,{\t(!dt + st()!,!dt + st(1)!,\clip(!clip_left!,0,!line.left + syl.next.center!,1080))}
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,mixin syl t_actor strmain if is_lastsyl,{\t(!dt + st()!,!dt + st(1)!,\clip(!clip_left!,0,!clip_right!,1080))}
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,mixin syl t_actor strmain if is_lastsyl,{\t(!line.duration - (300 + line.width/2)!,0,\clip(!clip_right!,0,!clip_right!,1080))}
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,,
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,mixin line t_actor strout,{\clip(!(word.prev and not word.prev.blank) and line.left + (word.left + word.prev.right)/2 or line.left!,!line.top-5!,!(word.next and line.left + (word.right + word.next.left)/2 or clip_right)!,!line.bottom+5!)\t(!line.duration-fl(0.37 * 400)!,0,2,\clip(!line.left + word.center!,!line.middle!,!line.left + word.center!,!line.middle!))}
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,,
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,mixin line t_actor bgbox,{\p1}!boxdraw!
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,mixin line t_actor string,{\p1}!string_shape!
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,,
Comment: 0,0:02:21.02,0:03:48.25,EDStyle,,0,0,0,,
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,,{=1}
Comment: 0,0:00:00.00,0:00:00.00,EDStyle,,0,0,0,,{=2}Kara
Comment: 0,0:22:20.07,0:22:21.74,EDStyle,,0,0,0,,{shifted 32126f from musicxml to e2 -a}
Dialogue: 0,0:22:21.53,0:22:24.24,EDStyle,start dull,0,0,0,kara,{\k20}{\k10}Ne{\k10}ver {\k10}mesh{\k30}ing {\k10}with {\k10}a{\k10}ny{\k20}one {\k20}{\k10}or {\k10}be{\k10}com{\k20}ing {\k10}{\k10}a{\k10}ny{\k40}one {\k1}
Dialogue: 0,0:22:24.70,0:22:27.41,EDStyle,start dull,0,0,0,kara,{\k20}{\k10}Know{\k10}ing {\k10}that's {\k20}just {\k10}{\k10}a {\k20}day{\k20}dream {\k10}{\k10}my {\k20}smi{\k30}le's {\k10}{\k10}just {\k10}a {\k40}front {\k1}
Dialogue: 0,0:22:27.91,0:22:30.62,EDStyle,start dull,0,0,0,kara,{\k20}{\k10}Shut{\k10}ting {\k10}out {\k30}my {\k10}{\k10}weak{\k10}ness{\k30}es {\k10}{\k10}on{\k10}ly {\k30}eats {\k10}{\k10}me {\k10}a{\k40}way {\k1}
Dialogue: 0,0:22:31.12,0:22:33.83,EDStyle,start dull,0,0,0,kara,{\k20}{\k10}Could{\k10}n't {\k10}e{\k20}ven {\k10}{\k20}tell {\k20}you {\k20}{\k10}that {\k30}Ɩ {\k10}{\k10}felt {\k10}so {\k10}a{\k40}lone {\k11}
Dialogue: 0,0:22:34.12,0:22:36.71,EDStyle,main dull,0,0,0,kara,{\k20}{\k20}{\-midi65}Can't {\k20}{\-midi64}i{\k20}{\-midi65}ma{\k20}{\-midi64}gine {\k40}{\-midi65}that {\k20}{\-midi65}my {\k20}{\-midi64}un{\k20}{\-midi65}sta{\k20}{\-midi64}ble {\k39}{\-midi65}heart {\k0}
Dialogue: 0,0:22:37.13,0:22:39.13,EDStyle,main dull,0,0,0,kara,{\k20}{\k20}{\-midi60}that {\k20}{\-midi65}sim{\k20}{\-midi65}ple {\k20}{\-midi65}chat{\k20}{\-midi65}ter {\k20}{\-midi67}o{\k20}{\-midi65}ver{\k20}{\-midi67}ru{\k20}{\-midi69}ns {\k0}
Dialogue: 0,0:22:40.51,0:22:43.13,EDStyle,main dull,0,0,0,kara,{\k20}{\k20}{\-midi65}E{\k20}{\-midi64}ver {\k20}{\-midi65}had {\k20}{\-midi64}a {\k40}{\-midi65}chance {\k20}{\-midi65}in {\k20}{\-midi64}a {\k20}{\-midi65}mil{\k20}{\-midi64}li{\k40}{\-midi65}on {\k2}
Dialogue: 0,0:22:43.51,0:22:45.51,EDStyle,main dull,0,0,0,kara,{\k20}{\k20}{\-midi60}to {\k20}{\-midi65}bring {\k20}{\-midi65}a {\k20}{\-midi65}smile {\k20}{\-midi69}to {\k20}{\-midi67}a{\k20}{\-midi65}ny{\k40}{\-midi65}one {\k0}
Dialogue: 0,0:22:46.93,0:22:49.51,EDStyle,main dull,0,0,0,kara,{\k20}{\k100}{\-midi69}Still {\k20}{\-midi69}in {\k20}{\-midi67}spite {\k20}{\-midi65}of {\k20}{\-midi67}eve{\k20}{\-midi69}ry{\k38}{\-midi60}thing {\k0}
Dialogue: 0,0:22:49.93,0:22:52.73,EDStyle,main dull,0,0,0,kara,{\k20}{\k20}{\-midi60}Ɩ {\k40}{\-midi65}feel {\k20}{\-midi64}a {\k40}{\-midi60}hope{\k20}{\-midi57}ful {\k60}{\-midi62}ye{\k20}{\-midi60}ar{\k40}{\-midi60}ning {\k0}
Dialogue: 0,0:22:53.10,0:22:54.73,EDStyle,main dull left noclamp,0,0,0,kara,{\k20}{\k20}{\-midi60}Ɩ'll {\k20}{\-midi65}set {\k20}{\-midi64}a{\k20}{\-midi65}side {\k20}{\-midi64}the {\k40}{\-midi65}lies {\k3}
Dialogue: 0,0:22:54.73,0:22:55.94,EDStyle,main dull right noclamp,0,0,0,kara,{\k20}{\-midi65}that {\k20}{\-midi64}Ɩ {\k20}{\-midi65}tried {\k20}{\-midi64}to {\k40}{\-midi65}say {\k1}
Dialogue: 0,0:22:55.94,0:22:56.73,EDStyle,main dull left noclamp,0,0,0,kara,{\k20}{\-midi65}let {\k20}{\-midi67}them {\k39}{\-midi65}all {\k0}
Dialogue: 0,0:22:56.73,0:22:59.11,EDStyle,main dull right,0,0,0,kara,{\k80}{\-midi65}fade {\k80}{\-midi67}a{\k78}{\-midi69}way {\k0}
Dialogue: 0,0:22:59.11,0:23:02.32,EDStyle,main,0,0,0,kara,{\k20}{\-midi65}Ɩ {\k20}{\-midi67}just {\k20}{\-midi69}wan{\k20}{\-midi65}na {\k20}{\-midi72}hear {\k20}{\-midi72}you {\k20}{\-midi72}say {\k20}{\-midi72}Ɩ {\k20}{\-midi72}was{\k20}{\-midi69}n't {\k20}{\-midi69}mis{\k40}{\-midi67}ta{\k60}{\-midi69}ken {\k1}
Dialogue: 0,0:23:02.32,0:23:05.53,EDStyle,main,0,0,0,kara,{\k20}{\k20}{\-midi65}Won't {\k20}{\-midi65}let {\k20}{\-midi64}my {\k20}{\-midi64}chi{\k20}{\-midi65}ld{\k20}{\-midi65}ish {\k40}{\-midi67}dreams {\k20}{\-midi65}be {\k20}{\-midi65}for{\k40}{\-midi64}sa{\k20}{\-midi64}ke{\k40}{\-midi65}n {\k1}
Dialogue: 0,0:23:05.53,0:23:09.33,EDStyle,main,0,0,0,kara,{\k20}{\k20}{\-midi60}E{\k20}{\-midi60}ven {\k20}{\-midi60}if {\k40}{\-midi60}Ɩ'm {\k20}{\-midi58}the {\k40}{\-midi65}same {\k20}{\k20}{\-midi65}as {\k40}{\-midi70}e{\k40}{\-midi69}ver {\k20}{\-midi69}Ɩ {\k20}{\-midi67}do{\k20}{\-midi65}n't {\k20}{\-midi65}mind {\k0}
Dialogue: 0,0:23:09.33,0:23:11.54,EDStyle,main,0,0,0,kara,{\k20}{\-midi65}Ɩ {\k30}{\-midi69}just {\k30}{\-midi69}want {\k20}{\-midi70}to {\k30}{\-midi69}sing {\k30}{\-midi69}by {\k20}{\-midi70}your {\k20}{\-midi70}si{\k20}{\-midi72}de {\k1}
Dialogue: 0,0:23:11.70,0:23:15.12,EDStyle,main,0,0,0,kara,{\k20}{\k20}{\-midi65}Ɩ {\k20}{\-midi67}know {\k20}{\-midi69}that {\k20}{\-midi65}Ɩ {\k20}{\-midi72}of{\k20}{\-midi72}ten {\k20}{\-midi72}find {\k20}{\-midi72}my {\k20}{\-midi72}feel{\k40}{\-midi69}ings {\k40}{\-midi67}sha{\k20}{\-midi67}ke{\k40}{\-midi69}n {\k2}
Dialogue: 0,0:23:15.12,0:23:17.92,EDStyle,main,0,0,0,kara,{\k20}{\k20}{\-midi65}And {\k20}{\-midi65}Ɩ've {\k40}{\-midi64}of{\k20}{\-midi65}ten {\k20}{\-midi65}been {\k40}{\-midi70}spurned {\k20}{\-midi69}and {\k20}{\-midi64}scor{\k60}{\-midi65}ned {\k0}
Dialogue: 0,0:23:18.29,0:23:21.50,EDStyle,main,0,0,0,kara,{\k20}{\k10}{\-midi60}But {\k10}{\-midi60}Ɩ'm {\k20}{\-midi60}still {\k40}{\-midi60}walk{\k20}{\-midi60}ing {\k20}{\-midi65}my {\k40}{\-midi65}path {\k20}{\-midi65}with {\k20}{\-midi67}a {\k60}{\-midi67}will{\k20}{\-midi69}ful {\k20}{\-midi69}stride {\k1}
Dialogue: 0,0:23:21.50,0:23:27.51,EDStyle,main,0,0,0,kara,{\k20}{\k10}{\-midi60}E{\k10}{\-midi60}ven {\k20}{\-midi60}if {\k40}{\-midi60}Ɩ {\k10}{\-midi60}can't {\k10}{\-midi65}be{\k20}{\-midi65}come {\k40}{\-midi65}an{\k20}{\-midi65}y{\k20}{\-midi67}one, {\k60}{\-midi67}Ɩ'll {\k20}{\-midi69}still {\k40}{\-midi70}have {\k20}{\-midi69}my {\k20}{\-midi64}pri{\k220}{\-midi65}de {\k1}
Dialogue: 0,0:23:28.30,0:23:30.72,EDStyle,main,0,0,0,kara,{\k20}{\k20}{\-midi65}Ɩ {\k30}{\-midi72}may {\k30}{\-midi69}be {\k40}{\-midi67}all {\k20}{\-midi69}on {\k20}{\-midi70}my {\k20}{\-midi67}o{\k40}{\-midi69}wn {\k2}
Dialogue: 0,0:23:31.10,0:23:34.31,EDStyle,main,0,0,0,kara,{\k20}{\k10}{\-midi60}But {\k10}{\-midi60}as {\k20}{\-midi60}long {\k40}{\-midi60}as {\k20}{\-midi60}Ɩ {\k20}{\-midi65}keep {\k40}{\-midi65}faith {\k20}{\-midi65}in {\k20}{\-midi67}my{\k60}{\-midi67}self {\k20}{\-midi69}a{\k20}{\-midi69}live {\k1}
Dialogue: 0,0:23:34.31,0:23:41.52,EDStyle,main last,0,0,0,kara,{\k20}{\k10}{\-midi60}When {\k10}{\-midi60}Ɩ {\k20}{\-midi60}get {\k40}{\-midi60}hurt {\k10}{\-midi60}Ɩ {\k10}{\-midi65}can {\k20}{\-midi65}get {\k40}{\-midi65}up {\k20}{\-midi65}and {\k20}{\-midi67}know {\k60}{\-midi67}Ɩ {\k20}{\-midi69}just {\k40}{\-midi70}need {\k20}{\-midi69}to {\k20}{\-midi64}si{\k340}{\-midi65}ng {\k1}
Comment: 0,0:23:41.52,0:23:43.52,EDStyle,,0,0,0,,{=3}

[Aegisub Extradata]
Data: 0,_aegi_folddata,e0;1;1
Data: 1,_aegi_folddata,e1;1;1
Data: 2,_aegi_folddata,e0;1;2
Data: 3,_aegi_folddata,e1;1;2